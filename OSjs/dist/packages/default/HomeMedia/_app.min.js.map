{"version":3,"sources":["/tmp/__header.js","/home/arne/OSJS/OS.js/src/packages/default/HomeMedia/main.js"],"names":["window","OSjs","Application","Window","Utils","API","VFS","GUI","ApplicationHomeMediaWindow","app","metadata","scheme","apply","this","icon","title","name","width","height","ApplicationHomeMedia","args","prototype","Object","create","constructor","init","wmRef","root","arguments","_render","destroy","settings","_addWindow","_api","err","res","console","log","Applications","Class","seal","Core"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAA,OAAOC,KAAOD,OAAOC,SCCrB,SAAUC,EAAaC,EAAQC,EAAOC,EAAKC,EAAKC,GAC9C,YAMA,SAASC,GAA2BC,EAAKC,EAAUC,GACjDR,EAAOS,MAAMC,MAAO,8BAClBC,KAAMJ,EAASI,KACfC,MAAOL,EAASM,KAChBC,MAAO,IACPC,OAAQ,KACPT,EAAKE,IA+BV,QAASQ,GAAqBC,EAAMV,GAClCR,EAAYU,MAAMC,MAAO,uBAAwBO,EAAMV,IA7BzDF,EAA2Ba,UAAYC,OAAOC,OAAOpB,EAAOkB,WAC5Db,EAA2BgB,YAAcrB,EAAOkB,UAEhDb,EAA2Ba,UAAUI,KAAO,SAASC,EAAOjB,EAAKE,GAC/D,GAAIgB,GAAOxB,EAAOkB,UAAUI,KAAKb,MAAMC,KAAMe,UAQ7C,OAJAf,MAAKgB,QAAQ,mBAINF,GAGTnB,EAA2Ba,UAAUS,QAAU,WAG7C,QAAK3B,EAAOkB,UAAUS,QAAQlB,MAAMC,KAAMe,YAc5CT,EAAqBE,UAAYC,OAAOC,OAAOrB,EAAYmB,WAC3DF,EAAqBK,YAActB,EAEnCiB,EAAqBE,UAAUS,QAAU,WAGvC,QAAK5B,EAAYmB,UAAUS,QAAQlB,MAAMC,KAAMe,YAMjDT,EAAqBE,UAAUI,KAAO,SAASM,EAAUrB,EAAUC,GACjET,EAAYmB,UAAUI,KAAKb,MAAMC,KAAMe,WACvCf,KAAKmB,WAAW,GAAIxB,GAA2BK,KAAMH,EAAUC,IAG/DE,KAAKoB,KAAK,UAAY,SAASC,EAAKC,GAClCC,QAAQC,IAAI,qCAAsCH,EAAKC,MAQ3DlC,KAAKqC,aAAerC,KAAKqC,iBACzBrC,KAAKqC,aAAanB,qBAAuBlB,KAAKqC,aAAanB,yBAC3DlB,KAAKqC,aAAanB,qBAAqBoB,MAAQjB,OAAOkB,KAAKrB,IAE1DlB,KAAKwC,KAAKvC,YAAaD,KAAKwC,KAAKtC,OAAQF,KAAKG,MAAOH,KAAKI,IAAKJ,KAAKK,IAAKL,KAAKM","file":"_app.min.js","sourcesContent":["/**!\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2017, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met: \n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer. \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution. \n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\nwindow.OSjs = window.OSjs || {};\n\n","/*!\n * OS.js - JavaScript Cloud/Web Desktop Platform\n *\n * Copyright (c) 2011-2017, Anders Evenrud <andersevenrud@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @author  Anders Evenrud <andersevenrud@gmail.com>\n * @licence Simplified BSD License\n */\n\n/*eslint valid-jsdoc: \"off\"*/\n(function(Application, Window, Utils, API, VFS, GUI) {\n  'use strict';\n\n  /////////////////////////////////////////////////////////////////////////////\n  // WINDOWS\n  /////////////////////////////////////////////////////////////////////////////\n\n  function ApplicationHomeMediaWindow(app, metadata, scheme) {\n    Window.apply(this, ['ApplicationHomeMediaWindow', {\n      icon: metadata.icon,\n      title: metadata.name,\n      width: 400,\n      height: 200\n    }, app, scheme]);\n  }\n\n  ApplicationHomeMediaWindow.prototype = Object.create(Window.prototype);\n  ApplicationHomeMediaWindow.constructor = Window.prototype;\n\n  ApplicationHomeMediaWindow.prototype.init = function(wmRef, app, scheme) {\n    var root = Window.prototype.init.apply(this, arguments);\n    var self = this;\n\n    // Render our Scheme file fragment into this Window\n    this._render('HomeMediaWindow');\n\n    // Put your GUI code here (or make a new prototype function and call it):\n\n    return root;\n  };\n\n  ApplicationHomeMediaWindow.prototype.destroy = function() {\n    // This is where you remove objects, dom elements etc attached to your\n    // instance. You can remove this if not used.\n    if ( Window.prototype.destroy.apply(this, arguments) ) {\n      return true;\n    }\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  // APPLICATION\n  /////////////////////////////////////////////////////////////////////////////\n\n  function ApplicationHomeMedia(args, metadata) {\n    Application.apply(this, ['ApplicationHomeMedia', args, metadata]);\n  }\n\n  ApplicationHomeMedia.prototype = Object.create(Application.prototype);\n  ApplicationHomeMedia.constructor = Application;\n\n  ApplicationHomeMedia.prototype.destroy = function() {\n    // This is where you remove objects, dom elements etc attached to your\n    // instance. You can remove this if not used.\n    if ( Application.prototype.destroy.apply(this, arguments) ) {\n      return true;\n    }\n    return false;\n  };\n\n  ApplicationHomeMedia.prototype.init = function(settings, metadata, scheme) {\n    Application.prototype.init.apply(this, arguments);\n    this._addWindow(new ApplicationHomeMediaWindow(this, metadata, scheme));\n\n    // Example on how to call `api.js` methods\n    this._api('test', {}, function(err, res) {\n      console.log('Result from your server API method', err, res);\n    });\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  // EXPORTS\n  /////////////////////////////////////////////////////////////////////////////\n\n  OSjs.Applications = OSjs.Applications || {};\n  OSjs.Applications.ApplicationHomeMedia = OSjs.Applications.ApplicationHomeMedia || {};\n  OSjs.Applications.ApplicationHomeMedia.Class = Object.seal(ApplicationHomeMedia);\n\n})(OSjs.Core.Application, OSjs.Core.Window, OSjs.Utils, OSjs.API, OSjs.VFS, OSjs.GUI);\n"]}